{"ast":null,"code":"var _jsxFileName = \"/Users/kim_haneong/Desktop/Fake new checker/fake-news-checker/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../Chatbot.css\"; // 필요한 경우 스타일 분리\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [hasStarted, setHasStarted] = useState(false);\n  const [initialQuestion, setInitialQuestion] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const chatLogRef = useRef(null);\n  useEffect(() => {\n    var _document$getElementB;\n    (_document$getElementB = document.getElementById(\"initial-question\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n  }, []);\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const getFakeResponse = async input => {\n    const lower = input.toLowerCase();\n    if (lower.includes(\"안녕\")) return \"안녕하세요! 무엇을 도와드릴까요?\";\n    if (lower.includes(\"시간\")) return \"지금은 \" + new Date().toLocaleTimeString() + \"입니다.\";\n    if (lower.includes(\"날씨\")) return \"오늘 날씨는 맑고 기분 좋습니다!\";\n    return \"죄송해요, 그 질문은 아직 이해하지 못했어요.\";\n  };\n  const appendMessage = (sender, text) => {\n    setMessages(prev => [...prev, {\n      sender,\n      text\n    }]);\n  };\n  const typeMessage = (sender, text) => {\n    let i = 0;\n    const interval = setInterval(() => {\n      setMessages(prev => {\n        const newMessages = [...prev];\n        const last = newMessages[newMessages.length - 1];\n        if (last && last.sender === sender && last.typing) {\n          last.text += text.charAt(i);\n        } else {\n          newMessages.push({\n            sender,\n            text: text.charAt(i),\n            typing: true\n          });\n        }\n        return newMessages;\n      });\n      i++;\n      if (i >= text.length) {\n        clearInterval(interval);\n        setMessages(prev => prev.map(msg => msg.typing ? {\n          ...msg,\n          typing: false\n        } : msg));\n      }\n    }, 30);\n  };\n  const startChat = async () => {\n    if (hasStarted || !initialQuestion.trim()) return;\n    setHasStarted(true);\n    appendMessage(\"user\", initialQuestion.trim());\n    const reply = await getFakeResponse(initialQuestion.trim());\n    typeMessage(\"bot\", reply);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    appendMessage(\"user\", input.trim());\n    setInput(\"\");\n    const reply = await getFakeResponse(input.trim());\n    typeMessage(\"bot\", reply);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chatbot-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uB098\\uC758 \\uCC57\\uBD07 \\uC11C\\uBE44\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uBA54\\uB2741\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uBA54\\uB2742\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: !hasStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"landing\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uBB34\\uC5C7\\uC774 \\uAD81\\uAE08\\uD558\\uC2E0\\uAC00\\uC694?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"initial-question\",\n            value: initialQuestion,\n            onChange: e => setInitialQuestion(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && startChat(),\n            placeholder: \"\\uC608: \\uC624\\uB298 \\uB0A0\\uC528 \\uC5B4\\uB54C?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startChat,\n            children: \"\\uC9C8\\uBB38\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-log\",\n            ref: chatLogRef,\n            children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${msg.sender}`,\n              style: {\n                whiteSpace: \"pre-wrap\"\n              },\n              children: msg.text\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"chat-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"\\uC804\\uC1A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"8vZ8u0p/uIlcHOp29OP7afMWBEM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","hasStarted","setHasStarted","initialQuestion","setInitialQuestion","messages","setMessages","input","setInput","chatLogRef","_document$getElementB","document","getElementById","focus","current","scrollTop","scrollHeight","getFakeResponse","lower","toLowerCase","includes","Date","toLocaleTimeString","appendMessage","sender","text","prev","typeMessage","i","interval","setInterval","newMessages","last","length","typing","charAt","push","clearInterval","map","msg","startChat","trim","reply","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","onKeyDown","key","placeholder","onClick","ref","style","whiteSpace","onSubmit","_c","$RefreshReg$"],"sources":["/Users/kim_haneong/Desktop/Fake new checker/fake-news-checker/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Chatbot.css\"; // 필요한 경우 스타일 분리\n\nconst Chatbot = () => {\n  const [hasStarted, setHasStarted] = useState(false);\n  const [initialQuestion, setInitialQuestion] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const chatLogRef = useRef(null);\n\n  useEffect(() => {\n    document.getElementById(\"initial-question\")?.focus();\n  }, []);\n\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const getFakeResponse = async (input) => {\n    const lower = input.toLowerCase();\n    if (lower.includes(\"안녕\")) return \"안녕하세요! 무엇을 도와드릴까요?\";\n    if (lower.includes(\"시간\"))\n      return \"지금은 \" + new Date().toLocaleTimeString() + \"입니다.\";\n    if (lower.includes(\"날씨\")) return \"오늘 날씨는 맑고 기분 좋습니다!\";\n    return \"죄송해요, 그 질문은 아직 이해하지 못했어요.\";\n  };\n\n  const appendMessage = (sender, text) => {\n    setMessages((prev) => [...prev, { sender, text }]);\n  };\n\n  const typeMessage = (sender, text) => {\n    let i = 0;\n    const interval = setInterval(() => {\n      setMessages((prev) => {\n        const newMessages = [...prev];\n        const last = newMessages[newMessages.length - 1];\n        if (last && last.sender === sender && last.typing) {\n          last.text += text.charAt(i);\n        } else {\n          newMessages.push({ sender, text: text.charAt(i), typing: true });\n        }\n        return newMessages;\n      });\n      i++;\n      if (i >= text.length) {\n        clearInterval(interval);\n        setMessages((prev) =>\n          prev.map((msg) => (msg.typing ? { ...msg, typing: false } : msg))\n        );\n      }\n    }, 30);\n  };\n\n  const startChat = async () => {\n    if (hasStarted || !initialQuestion.trim()) return;\n    setHasStarted(true);\n    appendMessage(\"user\", initialQuestion.trim());\n    const reply = await getFakeResponse(initialQuestion.trim());\n    typeMessage(\"bot\", reply);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    appendMessage(\"user\", input.trim());\n    setInput(\"\");\n    const reply = await getFakeResponse(input.trim());\n    typeMessage(\"bot\", reply);\n  };\n\n  return (\n    <div className=\"chatbot-wrapper\">\n      <header className=\"chatbot-header\">\n        <h1>나의 챗봇 서비스</h1>\n      </header>\n\n      <div className=\"chatbot-container\">\n        <aside className=\"sidebar\">\n          <p>메뉴1</p>\n          <p>메뉴2</p>\n        </aside>\n\n        <main className=\"main\">\n          {!hasStarted ? (\n            <div className=\"landing\">\n              <h2>무엇이 궁금하신가요?</h2>\n              <input\n                type=\"text\"\n                id=\"initial-question\"\n                value={initialQuestion}\n                onChange={(e) => setInitialQuestion(e.target.value)}\n                onKeyDown={(e) => e.key === \"Enter\" && startChat()}\n                placeholder=\"예: 오늘 날씨 어때?\"\n              />\n              <button onClick={startChat}>질문하기</button>\n            </div>\n          ) : (\n            <div className=\"chat-container\">\n              <div className=\"chat-log\" ref={chatLogRef}>\n                {messages.map((msg, i) => (\n                  <div\n                    key={i}\n                    className={`message ${msg.sender}`}\n                    style={{ whiteSpace: \"pre-wrap\" }}\n                  >\n                    {msg.text}\n                  </div>\n                ))}\n              </div>\n              <form onSubmit={handleSubmit} className=\"chat-form\">\n                <input\n                  type=\"text\"\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  placeholder=\"메시지를 입력하세요...\"\n                />\n                <button type=\"submit\">전송</button>\n              </form>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}