{"ast":null,"code":"var _jsxFileName = \"/Users/kim_haneong/Desktop/Fake new checker/fake-news-checker/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\n// Chatbot.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport '../styles/Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot({\n  query,\n  goHome\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    if (query) {\n      const userMessage = {\n        sender: 'user',\n        text: query\n      };\n      setMessages(prev => [...prev, userMessage]);\n      fetchResponse(query);\n    }\n  }, [query]);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const fetchResponse = async q => {\n    //여기에 API 호출 \n    const botMessage = {\n      sender: 'bot',\n      text: `\"${q}\"에 대한 응답입니다.`\n    };\n    setMessages(prev => [...prev, botMessage]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input.trim()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    fetchResponse(input.trim());\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD310\\uBCC4 \\uAE30\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: history.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goHome,\n        children: \"\\u2190 \\uD648\\uC73C\\uB85C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC57\\uBD07 \\uC751\\uB2F5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"\\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"kEoKxZ/9P7c9eo6VGatbZzO/QAU=\");\n_c = Chatbot;\nexport default Chatbot;\n{/* </div>const fetchResponse = async (q) => { \n try {\n const response = await fetch('https://your-chat-api.com/ask', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    // 필요한 경우 Authorization 헤더도 추가\n  },\n  body: JSON.stringify({ question: q })\n });\n   const data = await response.json();\n   const botMessage = {\n  sender: 'bot',\n  text: data.answer || '응답을 받지 못했습니다.'\n };\n setMessages((prev) => [...prev, botMessage]);\n } catch (error) {\n console.error('API 호출 오류:', error);\n const botMessage = {\n  sender: 'bot',\n  text: '오류가 발생했습니다. 다시 시도해주세요.'\n };\n setMessages((prev) => [...prev, botMessage]);\n }\n }; */}\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Chatbot","query","goHome","_s","messages","setMessages","input","setInput","chatEndRef","userMessage","sender","text","prev","fetchResponse","_chatEndRef$current","current","scrollIntoView","behavior","q","botMessage","handleSubmit","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","history","map","item","index","onClick","msg","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/kim_haneong/Desktop/Fake new checker/fake-news-checker/src/components/Chatbot.js"],"sourcesContent":["// Chatbot.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport '../styles/Chatbot.css';\n\nfunction Chatbot({ query, goHome }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    if (query) {\n      const userMessage = { sender: 'user', text: query };\n      setMessages((prev) => [...prev, userMessage]);\n      fetchResponse(query);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const fetchResponse = async (q) => { //여기에 API 호출 \n    const botMessage = {\n      sender: 'bot',\n      text: `\"${q}\"에 대한 응답입니다.`\n    };\n    setMessages((prev) => [...prev, botMessage]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = { sender: 'user', text: input.trim() };\n    setMessages((prev) => [...prev, userMessage]);\n    fetchResponse(input.trim());\n    setInput('');\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-header\">\n        <div className=\"Sidebar\">\n        <h2>판별 기록</h2>\n        <ul>\n        {history.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n        </div>\n        <button onClick={goHome}>← 홈으로</button>\n        <h2>챗봇 응답</h2>\n      </div>\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            <div className=\"bubble\">{msg.text}</div>\n          </div>\n        ))}\n        <div ref={chatEndRef} />\n      </div>\n      <form className=\"chatbot-input\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"질문을 입력하세요\"\n        />\n        <button type=\"submit\">→</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Chatbot;\n\n\n      {/* </div>const fetchResponse = async (q) => { \n    try {\n      const response = await fetch('https://your-chat-api.com/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // 필요한 경우 Authorization 헤더도 추가\n        },\n        body: JSON.stringify({ question: q })\n      });\n  \n      const data = await response.json();\n  \n      const botMessage = {\n        sender: 'bot',\n        text: data.answer || '응답을 받지 못했습니다.'\n      };\n      setMessages((prev) => [...prev, botMessage]);\n    } catch (error) {\n      console.error('API 호출 오류:', error);\n      const botMessage = {\n        sender: 'bot',\n        text: '오류가 발생했습니다. 다시 시도해주세요.'\n      };\n      setMessages((prev) => [...prev, botMessage]);\n    }\n  }; */}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}